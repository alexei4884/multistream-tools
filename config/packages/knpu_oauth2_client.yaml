knpu_oauth2_client:
    clients:
        # configure your clients as described here: https://github.com/knpuniversity/oauth2-client-bundle#configuration

        twitch:
            type: generic
            provider_class: Vertisan\OAuth2\Client\Provider\TwitchHelix
            client_id: '%env(OAUTH_TWITCH_CLIENT_ID)%'
            client_secret: '%env(OAUTH_TWITCH_CLIENT_SECRET)%'
            # a route name you'll create
            redirect_route: connect_twitch_check
            redirect_params: { }
            # whether to check OAuth2 "state": defaults to true
            # use_state: false

        # will create service: "knpu.oauth2.client.google"
        # an instance of: KnpU\OAuth2ClientBundle\Client\Provider\GoogleClient
        google:
            type: google
            client_id: '%env(OAUTH_GOOGLE_CLIENT_ID)%'
            client_secret: '%env(OAUTH_GOOGLE_CLIENT_SECRET)%'
            redirect_route: connect_google_check
            redirect_params: { }
            # Optional value for sending access_type parameter. More detail: https://developers.google.com/identity/protocols/OpenIDConnect#authenticationuriparameters
            access_type: 'offline'
            # Optional value for sending hd parameter. More detail: https://developers.google.com/identity/protocols/OpenIDConnect#hd-param
            # hosted_domain: null
            # Optional value for additional fields to be requested from the user profile. If set, these values will be included with the defaults. More details: https://developers.google.com/+/web/api/rest/latest/people
            # user_fields: {}
            # Optional value if you don't want or need to enable Google+ API access.
            # use_oidc_mode: false
            # whether to check OAuth2 "state": defaults to true
            # use_state: true

        #        brime:
        #            type: generic
        #            provider_class: Vasilvestre\Oauth2Brimetv\Brime
        #            client_id: '%env(OAUTH_BRIME_CLIENT_ID)%'
        #            client_secret: '%env(OAUTH_BRIME_CLIENT_SECRET)%'
        #            # a route name you'll create
        #            redirect_route: connect_brime_check
        #            redirect_params: { }
        #            use_state: false

        brime:
            # must be "auth0" - it activates that type!
            type: auth0
            # add and set these environment variables in your .env files
            client_id: '%env(OAUTH_BRIME_CLIENT_ID)%'
            client_secret: '%env(OAUTH_BRIME_CLIENT_SECRET)%'
            redirect_route: connect_brime_check
            redirect_params: { }
            # Your custom/definite Auth0 domain, e.g. "login.mycompany.com". Set this if you use Auth0's Custom Domain feature. The "account" and "region" parameters will be ignored in this case.
            custom_domain: 'auth.brime.tv'
            # Your Auth0 domain/account, e.g. "mycompany" if your domain is "mycompany.auth0.com"
            # account: null
            # Your Auth0 region, e.g. "eu" if your tenant is in the EU.
            # region: null
            # whether to check OAuth2 "state": defaults to true
            # use_state: true

        trovo:
            type: generic
            provider_class: Artandor\Oauth2Trovo\Trovo
            client_id: '%env(OAUTH_TROVO_CLIENT_ID)%'
            client_secret: '%env(OAUTH_TROVO_CLIENT_SECRET)%'
            # a route name you'll create
            redirect_route: connect_trovo_check
            redirect_params: { }
#            use_state: false
